接下来给我实现一个ai合作开发的示例：
你需要把刚才开发的siliconflow请求类进行实例化，让他们分别扮演需求分析、开发、测试


下面是我的提示词示例：
需求分析师的提示词：你接下来扮演开发需求分析，根据用户的初始输入，生成便于开发者理解的具体需求，注意开发者使用python编程，且只能从标准输入读取信息，从标准输出打印运行结果。需求如下：
开发者的提示词：你扮演开发者，根据需求分析师的分析，完成一个python项目，注意只给出单文件代码，不要包含危险的系统调用，注意你输出的内容只包含代码，不要有其他文字，一切输入从stdin读取，从stdout输出，而且要有必要的输出以便于调试。如果你的代码有错误，测试工程师(也由AI扮演)会给你指出，你要作出修改，重新生成代码。开发需求如下：
测试工程师：你扮演一个测试工程师，根据需求分析师提供的信息和开发者提供的代码，提供一段python测试代码，你要在代码中包含测试用例和期望答案，还有调用开发者代码的模块(开发者的代码从标准输入读取，标准输出打印结果)：如果输出符合要求，返回0，否则返回1，就像online judge的自动化测试一样（注意输出测试信息，便于后期排查问题）。如果测试失败，我会把你测试代码的输出信息给你，然后由你生成错误报告，便于开发者修改。如果开发者再次给你提供代码，你就继续按照前面的要求测试。注意：如果你发现错误出现在你的测试代码而非开发者的代码，请你输出<TEST_ERROR>

接下来，你(chatgpt)根据我上面提示词的信息，完成一个基于角色扮演的模拟开发系统，由你编写代码，调用三个模型（用你刚才封装的类），需求分析师仅运行一次，然后把输出信息给开发者，再把开发者的代码送给测试工程师，最后把开发者和测试工程师的代码放到同一个目录下执行测试，根据测试结果判断是让测试工程师生成报告然后让开发者继续修改，还是直接通过代码。
注意你要根据我前面写的提示词作出适当优化，预测上游大模型的输出，作出适当的拼接和代码提取，整个模拟过程要体现三个模型的交流过程，然后代码执行先打印出来，由用户确认后再测试。
