{
  "model": "deepseek-reasoner",
  "messages": [
    {
      "role": "system",
      "content": "你是资深 Python 开发者。 根据需求分析师提供的需求，要编写一个单文件Python脚本（我会帮你保存为solution.py）：\n - 仅输出代码，不要有任何额外解释或注释之外的文字；\n - 所有输入从stdin读取，所有输出写到stdout，输入可选，输出必须；\n - 禁止任何危险系统调用；\n - 必要时可添加调试打印（stdout 或 stderr），由于测试工程师会进行黑盒测试，输出格式务必规范化\n - 要处理常见错误（空输入、格式错误、边界值）；\n如果测试工程师反馈错误，你将收到错误报告，需修复并重新输出完整脚本。"
    },
    {
      "role": "user",
      "content": "需求描述：\n### 需求分析要点：\n\n#### 1. 功能描述\n- 实现一个字符串模式匹配功能，判断模式串 `p` 是否能完全匹配输入字符串 `s`。\n- 模式串 `p` 支持两种特殊字符：\n  - `.`：匹配任意单个字符。\n  - `*`：匹配前一个字符 0 次或多次（需注意 `*` 不能单独出现）。\n\n#### 2. 约束条件\n- 匹配必须是完全匹配，即整个字符串 `s` 必须被模式 `p` 完全覆盖。\n- 模式串 `p` 仅包含小写字母、`.` 和 `*`。\n- 输入字符串 `s` 仅包含小写字母。\n- 模式串 `p` 是有效的（即 `*` 不会出现在开头，也不会连续出现）。\n\n#### 3. 输入输出\n- **输入**：\n  - 从 `stdin` 读取两行：\n    - 第一行：字符串 `s`（例如 `\"aab\"`）。\n    - 第二行：模式串 `p`（例如 `\"c*a*b\"`）。\n  - 数据类型：字符串。\n  - 边界条件：\n    - `s` 和 `p` 可能为空字符串（`\"\"`）。\n    - `s` 和 `p` 的长度不超过 20（假设合理范围）。\n- **输出**：\n  - 打印 `true` 或 `false`，表示是否完全匹配。\n\n#### 4. 异常情况及处理\n- 无效输入：\n  - 模式串 `p` 包含非法字符（非小写字母、`.` 或 `*`）：建议提示并退出。\n  - `*` 出现在模式串开头：建议提示并退出。\n  - 输入行数不足：建议提示并退出。\n- 极端情况：\n  - `s` 或 `p` 为空字符串时需正确处理（例如 `p = \"a*\"` 可以匹配 `s = \"\"`）。\n  - `p` 中存在连续的 `*`（如 `a**b`）：假设输入合法，无需处理。\n\n#### 5. 示例说明\n- 示例 1：\n  - 输入：\n    ```\n    aab\n    c*a*b\n    ```\n  - 输出：`true`（`c*` 匹配 0 次，`a*` 匹配两次，`b` 匹配一次）。\n- 示例 2：\n  - 输入：\n    ```\n    aa\n    a\n    ```\n  - 输出：`false`（模式 `a` 无法完全匹配 `aa`）。"
    }
  ],
  "stream": true,
  "max_tokens": 4096,
  "stream_options": {
    "include_usage": true
  }
}